[MASTER]
# 指定用于运行Pylint的Python解释器
python-version=3.9

# 要加载的Pylint插件列表
load-plugins=

# 禁用的消息、报告、类别或检查器
disable=
    C0111,  # missing-docstring
    C0103,  # invalid-name (允许单字母变量名在某些上下文中)
    R0903,  # too-few-public-methods
    R0913,  # too-many-arguments (AI模型通常有很多参数)
    W0613,  # unused-argument (在接口实现中可能需要)
    W0622,  # redefined-builtin
    C0415,  # import-outside-toplevel (延迟导入在AI项目中很常见)

# 启用的消息、报告、类别或检查器
enable=
    C0326,  # bad-whitespace

[MESSAGES CONTROL]
# 仅显示错误
# output-format=colorized

[REPORTS]
# 设置模板用于显示消息
msg-template={path}:{line}:{column}: {msg_id}: {msg} ({symbol})

# 是否显示报告
reports=no

# 评估表达式
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

[REFACTORING]
# 最大嵌套块数
max-nested-blocks=5

[BASIC]
# 正则表达式，用于匹配正确的函数名
function-rgx=[a-z_][a-z0-9_]{2,30}$

# 正则表达式，用于匹配正确的变量名
variable-rgx=[a-z_][a-z0-9_]{2,30}$

# 正则表达式，用于匹配正确的常量名
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# 正则表达式，用于匹配正确的类名
class-rgx=[A-Z_][a-zA-Z0-9]+$

# 正则表达式，用于匹配正确的模块名
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# 正则表达式，用于匹配正确的方法名
method-rgx=[a-z_][a-z0-9_]{2,30}$

# 正则表达式，用于匹配正确的属性名
attr-rgx=[a-z_][a-z0-9_]{2,30}$

# 好的变量名提示
good-names=i,j,k,ex,Run,_,id,db,ai,ml,lr,df

[FORMAT]
# 每行最大字符数
max-line-length=100

# 字符串引用的一致性检查
string-quote=single-avoid-escape

[VARIABLES]
# 用于生成成员的正则表达式
generated-members=numpy.*,torch.*,pandas.*

[DESIGN]
# 最大参数数量
max-args=10

# 最大局部变量数量
max-locals=25

# 最大返回语句数量
max-returns=10

# 最大分支数量
max-branches=20

# 最大语句数量
max-statements=80

# 最大属性数量
max-attributes=15

# 最大公共方法数量
max-public-methods=25

[CLASSES]
# 有效的类装饰器名称列表
valid-classmethod-first-arg=cls

# 有效的元类名称列表
valid-metaclass-classmethod-first-arg=mcs

[IMPORTS]
# 强制导入顺序
import-graph=

# 已知第三方模块
known-third-party=
    torch,
    transformers,
    sentence_transformers,
    pandas,
    numpy,
    faiss,
    fastapi,
    pydantic,
    uvicorn,
    loguru,
    yaml,
    tqdm

[EXCEPTIONS]
# 包含过于宽泛的异常类型的模块列表
overgeneral-exceptions=Exception